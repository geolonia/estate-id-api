service: estate-id-api
frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ap-northeast-1
  apiGateway:
    shouldStartNameWithService: true
  endpointType: REGIONAL
  environment:
    STAGE: ${self:provider.stage}

    # App configs
    ZOOM: ${self:custom.zoomLevel}
    ACCESS_TOKEN_SALT: ${env:ACCESS_TOKEN_SALT}
    # IPC configs
    INCREMENTP_VERIFICATION_API_ENDPOINT: "https://d3q1ylas6o7xmg.cloudfront.net/v1"
    INCREMENTP_VERIFICATION_API_KEY: ${env:INCREMENTP_VERIFICATION_API_KEY}
    # Internal Stack Refs
    AWS_DYNAMODB_API_KEY_TABLE_NAME: ${self:custom.awsDynamodbApiKeyTableName}
    AWS_DYNAMODB_ESTATE_ID_TABLE_NAME: ${self:custom.awsDynamodbEstateIdTableName}
    AWS_DYNAMODB_LOG_TABLE_NAME: !Ref logTable

    AUTH0_CLIENT_ID: ${self:custom.${self:provider.stage}.AUTH0_CLIENT_ID}

    RELEASE_VER: ${env:GITHUB_SHA, 'dev'}
    SENTRY_DSN: ${env:SENTRY_DSN, ''}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

  layers:
    - arn:aws:lambda:ap-northeast-1:943013980633:layer:SentryNodeServerlessSDK:9

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - kms:Decrypt
          Resource:
            - !Join
              - ":"
              - - "arn:aws:ssm"
                - !Ref AWS::Region
                - !Ref AWS::AccountId
                - parameter/propid/auth0/${self:provider.environment.AUTH0_CLIENT_ID}
            - !Join
              - ":"
              - - "arn:aws:kms"
                - !Ref AWS::Region
                - !Ref AWS::AccountId
                - "key/alias/aws/ssm"

        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:Query
          Resource:
            - !GetAtt estateIdTable.Arn
            - !Join
              - ""
              - - !GetAtt estateIdTable.Arn
                - "/index/*"
            - !GetAtt apiKeyTable.Arn
            - !Join
              - ""
              - - !GetAtt apiKeyTable.Arn
                - "/index/*"
            - !GetAtt logTable.Arn

custom:
  # [ATTENTION] All Estate IDs will be changed If zoom altered.
  zoomLevel: 22
  awsDynamodbApiKeyTableName: estate-id-api-key-${self:provider.stage}
  awsDynamodbEstateIdTableName: estate-id-${self:provider.stage}

  local:
    AUTH0_CLIENT_ID: "0IGvgMGyFFgeKseJtwchmzqEXyPyDUH9"
  dev:
    AUTH0_CLIENT_ID: "q8MpkH61Sufg0lkIH7PRKF7Ksz4cAmRN"
  v1:
    AUTH0_CLIENT_ID: "Nibkdkq435jxZpJR2JiiZlxY5gMvzAzw"

package:
  exclude:
    - __tests__
    - .*
    - bin/
    - docs/
    - src/
    - package.json
    - README.md
    - serverless.yml
    - tsconfig.json
    - yarn.lock
    - package-lock.json
    - src/**/*.map

resources:
  Resources:
    apiKeyTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.awsDynamodbApiKeyTableName}
        AttributeDefinitions:
          - AttributeName: apiKey
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: apiKey
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: GSI1PK-GSI1SK-index
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    estateIdTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.awsDynamodbEstateIdTableName}
        AttributeDefinitions:
          - AttributeName: estateId
            AttributeType: S
          - AttributeName: address
            AttributeType: S
          - AttributeName: tileXY
            AttributeType: S
          - AttributeName: serial
            AttributeType: N
        KeySchema:
          - AttributeName: estateId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: address-index
            KeySchema:
              - AttributeName: address
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: tileXY-index
            KeySchema:
              - AttributeName: tileXY
                KeyType: HASH
              - AttributeName: serial
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    logTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

functions:
  public:
    handler: src/public.handler
    events:
      - http:
          path: '/'
          method: get

  idQuery:
    handler: src/idQuery.handler
    events:
      - http:
          path: '/{estateId}'
          method: get
          request:
            parameters:
              paths:
                estateId: true

  admin:
    handler: src/admin.handler
    events:
      - http:
          path: '/admin/keys'
          method: get
      - http:
          path: '/admin/keys'
          method: post
      - http:
          path: '/admin/keys/{keyId}/reissue'
          method: patch
          request:
            parameters:
              paths:
                keyId: true

  demo:
    handler: src/demo.handler
    events:
      - http:
          path: '/demo'
          method: get
      - http:
          path: '/demo/{estateId}'
          method: get
          request:
            parameters:
              paths:
                estateId: true
