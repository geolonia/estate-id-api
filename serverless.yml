service: estate-id-api
frameworkVersion: '2'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: ap-northeast-1
  apiGateway:
    shouldStartNameWithService: true
  endpointType: REGIONAL
  environment:
    ZOOM: ${self:custom.zoomLevel}
    # INCREMENTP_VERIFICATION_API_ENDPOINT: ${env:INCREMENTP_VERIFICATION_API_ENDPOINT}
    INCREMENTP_VERIFICATION_API_ENDPOINT: ${cf:estate-id-api-cdn-${self:custom.stage}.BackendCDNEndpoint}
    INCREMENTP_VERIFICATION_API_KEY: ${env:INCREMENTP_VERIFICATION_API_KEY}
    ACCESS_TOKEN_SALT: ${env:ACCESS_TOKEN_SALT}
    AWS_DYNAMODB_API_KEY_TABLE_NAME: ${self:custom.awsDynamodbApiKeyTableName}
    AWS_DYNAMODB_ESTATE_ID_TABLE_NAME: ${self:custom.awsDynamodbEstateIdTableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.awsDynamodbApiKeyTableName}

    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.awsDynamodbEstateIdTableName}

custom:
  stage: ${opt:stage, self:provider.stage}
  # [ATTENTION] All Estate IDs will be changed If zoom altered.
  zoomLevel: 24
  awsDynamodbApiKeyTableName: estate-id-api-key-${self:custom.stage}
  awsDynamodbEstateIdTableName: estate-id-${self:custom.stage}

package:
  exclude:
    - __tests__
    - .*
    - src
    - package.json
    - README.md
    - serverless.yml
    - tsconfig.json
    - yarn.lock
    - package-lock.json

resources:
  Resources:
    apiKeyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.awsDynamodbApiKeyTableName}
        AttributeDefinitions:
          - AttributeName: apiKey
            AttributeType: S
        KeySchema:
          - AttributeName: apiKey
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    estateIdTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.awsDynamodbEstateIdTableName}
        AttributeDefinitions:
          - AttributeName: estateId
            AttributeType: S
        KeySchema:
          - AttributeName: estateId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  public:
    handler: dist/public.handler
    events:
      - http:
          path: '/'
          method: get
          integration: lambda-proxy

  debug:
    handler: dist/debug.handler
    events:
      - http:
          path: '/debug'
          method: get
          integration: lambda-proxy
